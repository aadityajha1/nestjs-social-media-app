# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  isFollowing: Boolean!
  name: String!
  dob: DateTime!
  profile_picture: String
  username: String!
  email: String!
  bio: String
  followers: [ID!]!
  following: [ID!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Auth {
  """Access Token"""
  access_token: String!
}

type LogoutResponse {
  access_token: String
}

type Post {
  _id: ID!
  userId: User!
  description: String
  imageUrl: String
  isDeleted: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Comment {
  _id: ID!
  userId: User!
  postId: Post!
  content: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  getHello: String!
  users: [User!]!
  user(id: Int!): User!
  searchUsersByName(query: String!): [User!]!
  posts: [Post!]!
  post(id: String!): Post!
  searchPosts(limit: Int! = 10, page: Int! = 0, query: String): [Post!]!
  comments: [Comment!]!
  comment(id: String!): Comment!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  followUser(userId: String!): User!
  createAuth(createAuthInput: CreateAuthInput!): Auth!
  logout: LogoutResponse
  login(loginDto: LoginDto!): Auth!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: String!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
}

input CreateUserInput {
  """Name of the user"""
  name: String!

  """Date of birth of the user"""
  dob: String!

  """Profile picture URL of the user"""
  profile_picture: String

  """Username of the user"""
  username: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!

  """Bio of the user"""
  bio: String

  """Followers of the user"""
  followers: [String!]
}

input UpdateUserInput {
  """Name of the user"""
  name: String

  """Date of birth of the user"""
  dob: String

  """Profile picture URL of the user"""
  profile_picture: String

  """Username of the user"""
  username: String

  """Email of the user"""
  email: String

  """Password of the user"""
  password: String

  """Bio of the user"""
  bio: String

  """Followers of the user"""
  followers: [String!]
  id: Int!
}

input CreateAuthInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input LoginDto {
  email: String!
  password: String!
}

input CreatePostInput {
  """Description for the post"""
  description: String!

  """Url of the Image"""
  file: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdatePostInput {
  description: String

  """Url of the Image"""
  file: Upload
  id: String!
}

input CreateCommentInput {
  """Post Id in which comment is to be created"""
  postId: String!

  """Content of the comment"""
  content: String!
}

input UpdateCommentInput {
  """Post Id in which comment is to be created"""
  postId: String

  """Updated Content of the comment"""
  content: String!

  """Comment Id which is to be updated"""
  commentId: String!
}